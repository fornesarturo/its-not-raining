{
    "id": 4,
    "player": [
        70,
        800
    ],
    "bounceObstacles": [
        [900, 600, 50, 800],
        [375, 700, 700, 35],
        [70, 850, 50, 20],
        [170, 850, 50, 20],
        [270, 850, 50, 20],
        [370, 850, 50, 20],
        [470, 850, 50, 20],
        [570, 850, 50, 20],
        [670, 850, 50, 20],
        [770, 850, 50, 20],
        [525, 450, 700, 35]
    ],
    "structures": [
        [0, 600, 50, 1300],
        [450, 10, 950, 35],
        [900, 100, 50, 190],
        [190, 390, 30, 85]
    ],
    "end": [830, 200, 35, 35],
    "obstacles": [
        {
            "coordinates": [70, 500, 50, 50],
            "setup": "(o) => { o.velocity.x = 5; }",
            "immune": true,
            "colorFill": "rgb(255, 204, 0)",
            "behaviour": "(o) => { o.collide(walls, function(sprite, target) { sprite.velocity.x *= -1; }); }"
        },
        {
            "coordinates": [70, 650, 50, 50],
            "setup": "(o) => { o.velocity.x = 5; }",
            "immune": true,
            "colorFill": "rgb(255, 204, 0)",
            "behaviour": "(o) => { o.collide(walls, function(sprite, target) { sprite.velocity.x *= -1; }); }"
        },
        {
            "coordinates": [890, 650, 50, 50],
            "setup": "(o) => { o.velocity.x = -5; }",
            "immune": true,
            "colorFill": "rgb(255, 204, 0)",
            "behaviour": "(o) => { o.collide(walls, function(sprite, target) { sprite.velocity.x *= -1; }); }"
        },
        {
            "coordinates": [890, 500, 50, 50],
            "setup": "(o) => { o.velocity.x = -5; }",
            "immune": true,
            "colorFill": "rgb(255, 204, 0)",
            "behaviour": "(o) => { o.collide(walls, function(sprite, target) { sprite.velocity.x *= -1; }); }"
        },
        {
            "coordinates": [400, 650, 50, 50],
            "setup": "(o) => { o.velocity.x = -5; }",
            "immune": true,
            "colorFill": "rgb(255, 204, 0)",
            "behaviour": "(o) => { o.collide(walls, function(sprite, target) { sprite.velocity.x *= -1; }); }"
        },
        {
            "coordinates": [400, 500, 50, 50],
            "setup": "(o) => { o.velocity.x = 5; }",
            "immune": true,
            "colorFill": "rgb(255, 204, 0)",
            "behaviour": "(o) => { o.collide(walls, function(sprite, target) { sprite.velocity.x *= -1; }); }"
        },

        {
            "coordinates": [890, 400, 50, 50],
            "setup": "(o) => { o.velocity.x = 5; }",
            "immune": true,
            "colorFill": "rgb(255, 204, 0)",
            "behaviour": "(o) => { o.collide(walls, function(sprite, target) { sprite.velocity.x *= -1; }); }"
        },
        {
            "coordinates": [200, 400, 50, 50],
            "setup": "(o) => { o.velocity.x = 5; }",
            "immune": true,
            "colorFill": "rgb(255, 204, 0)",
            "behaviour": "(o) => { o.collide(walls, function(sprite, target) { sprite.velocity.x *= -1; }); }"
        },
        {
            "coordinates": [400, 400, 50, 50],
            "setup": "(o) => { o.velocity.x = 5; }",
            "behaviour": "(o) => { o.collide(walls, function(sprite, target) { sprite.velocity.x *= -1; }); }"
        },
        {
            "coordinates": [400, 400, 50, 50],
            "setup": "(o) => { o.velocity.x = -5; }",
            "behaviour": "(o) => { o.collide(walls, function(sprite, target) { sprite.velocity.x *= -1; }); }"
        },
        {
            "coordinates": [700, 400, 50, 50],
            "setup": "(o) => { o.velocity.x = 5; }",
            "behaviour": "(o) => { o.collide(walls, function(sprite, target) { sprite.velocity.x *= -1; }); }"
        },

        {
            "coordinates": [450, 950, 950, 35],
            "setup": "(o) => {  }",
            "behaviour": "(o) => { o.collide(walls, function(sprite, target) {}); }",
            "immune": true,
            "colorFill": "rgb(255, 204, 0)"
        }
    ]
}